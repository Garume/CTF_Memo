
from functools import reduce
from gmpy2 import *
from Crypto.Util.number import *

divisors = [(16969003, 1), (17009203, 1), (17027027, 1), (17045117, 1), (17137009, 1), (17151529, 1), (17495507, 1), (17685739, 1), (17933647, 1), (18206689, 1), (18230213, 1), (18505933, 1), (18613019, 1), (18868781, 1), (18901951, 1), (18947729, 1), (19022077, 1), (19148609, 1), (19574987, 1), (19803209, 1), (20590697, 1), (20690983, 1), (21425317, 1), (21499631, 1), (21580043, 1), (21622099, 1), (21707797, 1), (21781139, 1), (21792359, 1), (21982481, 1), (22101437, 1), (22367311, 1), (22374509, 1), (22407799, 1), (22491913, 1), (22537409, 1), (22542229, 1), (22550677, 1), (22733041, 1), (23033441, 1), (23049673, 1), (23083759, 1), (23179243, 1), (23342663, 1), (23563571, 1), (23611043, 1), (23869933, 1), (24027973, 1), (24089029, 1), (24436597, 1), (24454291, 1), (24468209, 1), (24848633, 1), (25564219, 1), (25888721, 1), (26055889, 1), (26119147, 1), (26839909, 1), (27152267, 1), (27304777, 1), (27316717, 1), (27491137, 1), (27647687, 1), (27801167, 1), (28082749, 1), (28103563, 1), (28151399, 1), (28620611, 1), (29035709, 1), (29738689, 1), (29891363, 1), (29979379, 1), (30007841, 1), (30013391, 1), (30049171, 1), (30162343, 1), (30419063, 1), (30461393, 1), (30625601, 1), (31004861, 1), (31108043, 1), (31123457, 1), (31269479, 1), (31384663, 1), (31387957, 1), (31390189, 1), (31469279, 1), (32307589, 1), (32432339, 1), (32514061, 1), (32628367, 1), (32687509, 1), (32703337, 1), (32709977, 1), (32715343, 1), (32737429, 1), (32831261, 1), (33388603, 1), (33418129, 1), (33472771, 1)]
e = 65537
c = 1357660325421905236173040941411359338802736250800006453031581109522066541737601274287649030380468751950238635436299480021037135774086215029644430055129816920963535754048879496768378328297643616038615858752932646595502076461279037451286883763676521826626519164192498162380913887982222099942381717597401448235443261041226997589294010823575492744373719750855298498634721551685392041038543683791451582869246173665336693939707987213605159100603271763053357945861234455083292258819529224561475560233877987367901524658639475366193596173475396592940122909195266605662802525380504108772561699333131036953048249731269239187358174358868432968163122096583278089556057323541680931742580937874598712243278738519121974022211539212142588629508573342020495

# https://en.wikipedia.org/wiki/Euler%27s_totient_function
n_ary = []
a_ary = []
for p, k in divisors:
    pk = p ** k
    phi = pk * (p-1) // p
    d = inverse(e, phi)
    mk = pow(c, d, pk)
    n_ary.append(pk)
    a_ary.append(mk)

# http://rosettacode.org/wiki/Chinese_remainder_theorem#Python
def chinese_remainder(n, a):
    sum = 0
    prod = reduce(lambda a, b: a*b, n)

    for n_i, a_i in zip(n, a):
        p = prod // n_i
        sum += a_i * inverse(p, n_i) * p
    return sum % prod

m = chinese_remainder(n_ary, a_ary)
print(m)
print(long_to_bytes(m))